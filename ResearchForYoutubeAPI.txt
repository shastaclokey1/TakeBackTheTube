This document is a place to explore the resources available to develop the customizable youtube page I have described in CustomizableYoutube.txt

https://web.archive.org/web/20201111211434if_/https://developers.google.com/youtube/v3/getting-started#quota
	
	-This page shows how to set up an authentication key with the Youtube API
	
	-It looks like each request from the API takes a certain number of "units" and common applications are granted 10,000 units per day. This is meant to protect against sites spamming the youtube API.
	
	-The data is returned in JSON format.

https://web.archive.org/web/20201101030656if_/https://developers.google.com/youtube/v3/docs/search/list

	-This page shows how to request content from a specified channel.

	-This could be how I accomplish my goal to have videos from each of the selected channels on my site's dashboard.

https://www.npmjs.com/package/yt-search
	
	- This package looks promising.

	- It looks like I can search for channels, search for playlists, and search for individual videos with the 
	
		yts({"query: 'search term'"}, function (err, response) {
			if ( err ) throw err
			console.log( r.videos ) // video results
			console.log( r.playlists ) // playlist results
			console.log( r.channels ) // channel results
			console.log( r.live ) // live stream results
		} ) 
	  
	  funciton  

	- I can't tell if I can display youtube url's with this search engine.

	- It looks like this package has 8 dependencies. They are on the npm website.

	- This package does not require any youtube api key. (No restrictions on number of searches!!)
	
	- https://github.com/talmobi/yt-search/blob/master/src/index.js

	- I have been able to use this package to request playlists using their id, videos using search terms, videos using their id, and channels using their id.
		
		- The data is returned in JSON format and I will be able to index into each returned data item easily.

		- I will probably need some null protection for empty data items at every level, but that is easy enough.

	- I want to find the playlist id of all the videos a channel uploads so I can search for a host of list ids and get all the videos for the associated channels in one swoop.

		- Go to the channel home tab, scroll down, and click on the "play all" button next to the uploads playlist.

		- This will start playing the first video of the uploads playlist which should be the most recent video.

		- Click on the list of videos in the sidebar to get to the uploads playlist page.

		- Copy the playlist id from the url as follows: https://www.youtube.com/playlist?list=UUagiBBx1prefrlsDzDxuA9A
		  copy UUagiBBx1prefrlsDzDxuA9A

		- Use this playlist id as a query param.
	
	- I am in the process of figuring out why this package cannot handle the json returned when requesting the "all uploads" playlist of a certian channel.

		- The package is throwing an error when I use the playlist id of a channel's uploads playlist.

		- The error occurs when working with the JSON object to generate a list of videos after the JSONString has already been parsed into a JSON object.

		- I logged the complete json string to the console and want to look at it with https://jsonprettyprint.org/.

		- The console log has returns in it which I need to get rid of for the pretty print to work.

		- I will use vim's find and replace feature to do this.

https://www.npmjs.com/package/usetube
	
	- This could also be an option for searching videos and channels.

	- There is no 'search for playlist' function in this package, but the 

		usetube.getChannelVideos('PLAbeRqyTx1rIGWY13HgPyh0VF0LdoTQFp').then(videos => { console.log(videos) })

	  looks promising to do what I want.

	- The readme does not specify what parameters are returned with the videos list.

	- My hope is that these contain names, descriptions and urls for each video.

	- https://github.com/valerebron/usetube/tree/master/dist

	- I was not able to get this package to work. I installed all the dependencies and used their code examples. I will come back to this if I cannot get yt-search to work the way I want.

https://www.w3schools.com/html/html_youtube.asp

	- This can be used to embedd whatever video I click on from the search results in a watch page.

	- It looks like all I have to do is set the src attribute to the video's url and html will take care of the rest. Sweet!

	- Example:
	  <iframe width="420" height="315"
		src="https://www.youtube.com/embed/tgbNymZ7vqY">
	  </iframe>

https://logomakr.com/9K2oKz

	- This is a cool site that can be used to make a logo for my cuscomizable youtube site.

	- I think I'll call my site lonevid becasue I already have that domain name.

	- It will be worth paying the $19 to get high resolution (vector format) logo files once I finalize the logo design.
	  In the meantime I can just use the low quality free download option.

	- Just kidding katie can help

https://www.w3schools.com/Css/css3_flexbox_container.asp

	- I can use flexbox to resize the watch iframe the way I want it.
